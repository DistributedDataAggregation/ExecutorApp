/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: query_request.proto */

#ifndef PROTOBUF_C_query_5frequest_2eproto__INCLUDED
#define PROTOBUF_C_query_5frequest_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "aggregate.pb-c.h"

typedef struct QueryRequest QueryRequest;
typedef struct Select Select;
typedef struct MainExecutor MainExecutor;


/* --- enums --- */


/* --- messages --- */

struct  QueryRequest
{
  ProtobufCMessage base;
  size_t n_files_names;
  char **files_names;
  size_t n_group_columns;
  char **group_columns;
  size_t n_select;
  Select **select;
  MainExecutor *executor;
};
#define QUERY_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&query_request__descriptor) \
    , 0,NULL, 0,NULL, 0,NULL, NULL }


struct  Select
{
  ProtobufCMessage base;
  char *column;
  Aggregate function;
};
#define SELECT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&select__descriptor) \
    , (char *)protobuf_c_empty_string, AGGREGATE__Minimum }


struct  MainExecutor
{
  ProtobufCMessage base;
  protobuf_c_boolean is_current_node_main;
  char *ip_address;
  int32_t port;
};
#define MAIN_EXECUTOR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&main_executor__descriptor) \
    , 0, (char *)protobuf_c_empty_string, 0 }


/* QueryRequest methods */
void   query_request__init
                     (QueryRequest         *message);
size_t query_request__get_packed_size
                     (const QueryRequest   *message);
size_t query_request__pack
                     (const QueryRequest   *message,
                      uint8_t             *out);
size_t query_request__pack_to_buffer
                     (const QueryRequest   *message,
                      ProtobufCBuffer     *buffer);
QueryRequest *
       query_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   query_request__free_unpacked
                     (QueryRequest *message,
                      ProtobufCAllocator *allocator);
/* Select methods */
void   select__init
                     (Select         *message);
size_t select__get_packed_size
                     (const Select   *message);
size_t select__pack
                     (const Select   *message,
                      uint8_t             *out);
size_t select__pack_to_buffer
                     (const Select   *message,
                      ProtobufCBuffer     *buffer);
Select *
       select__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   select__free_unpacked
                     (Select *message,
                      ProtobufCAllocator *allocator);
/* MainExecutor methods */
void   main_executor__init
                     (MainExecutor         *message);
size_t main_executor__get_packed_size
                     (const MainExecutor   *message);
size_t main_executor__pack
                     (const MainExecutor   *message,
                      uint8_t             *out);
size_t main_executor__pack_to_buffer
                     (const MainExecutor   *message,
                      ProtobufCBuffer     *buffer);
MainExecutor *
       main_executor__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   main_executor__free_unpacked
                     (MainExecutor *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*QueryRequest_Closure)
                 (const QueryRequest *message,
                  void *closure_data);
typedef void (*Select_Closure)
                 (const Select *message,
                  void *closure_data);
typedef void (*MainExecutor_Closure)
                 (const MainExecutor *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor query_request__descriptor;
extern const ProtobufCMessageDescriptor select__descriptor;
extern const ProtobufCMessageDescriptor main_executor__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_query_5frequest_2eproto__INCLUDED */
