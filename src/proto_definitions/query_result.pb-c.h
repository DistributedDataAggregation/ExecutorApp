/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: query_result.proto */

#ifndef PROTOBUF_C_query_5fresult_2eproto__INCLUDED
#define PROTOBUF_C_query_5fresult_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "aggregate.pb-c.h"
#include "result_type.pb-c.h"
#include "error.pb-c.h"

typedef struct QueryResult QueryResult;
typedef struct ResultValue ResultValue;
typedef struct CombinedResult CombinedResult;


/* --- enums --- */


/* --- messages --- */

struct  QueryResult
{
  ProtobufCMessage base;
  char *guid;
  Error *error;
  size_t n_values;
  ResultValue **values;
};
#define QUERY_RESULT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&query_result__descriptor) \
    , (char *)protobuf_c_empty_string, NULL, 0,NULL }


struct  ResultValue
{
  ProtobufCMessage base;
  char *grouping_value;
  size_t n_results;
  CombinedResult **results;
};
#define RESULT_VALUE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&result_value__descriptor) \
    , (char *)protobuf_c_empty_string, 0,NULL }


typedef enum {
  COMBINED_RESULT__VALUE__NOT_SET = 0,
  COMBINED_RESULT__VALUE_INT_VALUE = 3,
  COMBINED_RESULT__VALUE_FLOAT_VALUE = 4,
  COMBINED_RESULT__VALUE_DOUBLE_VALUE = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(COMBINED_RESULT__VALUE__CASE)
} CombinedResult__ValueCase;

struct  CombinedResult
{
  ProtobufCMessage base;
  protobuf_c_boolean is_null;
  ResultType type;
  Aggregate function;
  CombinedResult__ValueCase value_case;
  union {
    int64_t int_value;
    float float_value;
    double double_value;
  };
};
#define COMBINED_RESULT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&combined_result__descriptor) \
    , 0, RESULT_TYPE__UNKNOWN, AGGREGATE__Minimum, COMBINED_RESULT__VALUE__NOT_SET, {0} }


/* QueryResult methods */
void   query_result__init
                     (QueryResult         *message);
size_t query_result__get_packed_size
                     (const QueryResult   *message);
size_t query_result__pack
                     (const QueryResult   *message,
                      uint8_t             *out);
size_t query_result__pack_to_buffer
                     (const QueryResult   *message,
                      ProtobufCBuffer     *buffer);
QueryResult *
       query_result__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   query_result__free_unpacked
                     (QueryResult *message,
                      ProtobufCAllocator *allocator);
/* ResultValue methods */
void   result_value__init
                     (ResultValue         *message);
size_t result_value__get_packed_size
                     (const ResultValue   *message);
size_t result_value__pack
                     (const ResultValue   *message,
                      uint8_t             *out);
size_t result_value__pack_to_buffer
                     (const ResultValue   *message,
                      ProtobufCBuffer     *buffer);
ResultValue *
       result_value__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   result_value__free_unpacked
                     (ResultValue *message,
                      ProtobufCAllocator *allocator);
/* CombinedResult methods */
void   combined_result__init
                     (CombinedResult         *message);
size_t combined_result__get_packed_size
                     (const CombinedResult   *message);
size_t combined_result__pack
                     (const CombinedResult   *message,
                      uint8_t             *out);
size_t combined_result__pack_to_buffer
                     (const CombinedResult   *message,
                      ProtobufCBuffer     *buffer);
CombinedResult *
       combined_result__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   combined_result__free_unpacked
                     (CombinedResult *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*QueryResult_Closure)
                 (const QueryResult *message,
                  void *closure_data);
typedef void (*ResultValue_Closure)
                 (const ResultValue *message,
                  void *closure_data);
typedef void (*CombinedResult_Closure)
                 (const CombinedResult *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor query_result__descriptor;
extern const ProtobufCMessageDescriptor result_value__descriptor;
extern const ProtobufCMessageDescriptor combined_result__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_query_5fresult_2eproto__INCLUDED */
